@page "/login"
@using modulum_client.Sevices
@inject IAccountManagement Acct
<h3>Login</h3>

<AuthorizeView Context="authContext">
    <Authorized>
        <div class="alert alert-success">Você está logado como @authContext.User.Identity?.Name.</div>
    </Authorized>
    <NotAuthorized>
        @if (errors)
        {
            @foreach (var error in errorList)
            {
                <div class="alert alert-danger">@error</div>
            }
        }
        <EditForm Model="Input" method="post" FormName="Bem vindo ao Modulum =)">
            <DataAnnotationsValidator />
            <h2>Use uma conta local para entrar.</h2>
            <hr />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">Email</label>
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                <label for="password" class="form-label">Senha</label>
            </div>
            <div>
                <button class="w-100 btn btn-lg btn-primary" @onclick="DoLoginAsync" disabled="@loading">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                        @textoBotao
                    } 
                    else
                    {
                        @textoBotao
                    }
                </button>
            </div>
        </EditForm>
        <!--div class="flex-outer">
            <div>
                <label for="email">
                    Email:
                </label>
                <input required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="email" />
            </div>
            <div>
                <label for="password">
                    Senha:
                </label>
                <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="password" />
            </div>
            <div>
                <button class="btn btn-primary" @onclick="DoLoginAsync">Login</button>
            </div>
        </div>-->
    </NotAuthorized>
</AuthorizeView>
@code {
    private String textoBotao = "Entrar";
    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string[] errorList = [];

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();
    private bool loading;

    public async Task DoLoginAsync()
    {
        loading = true;
        textoBotao = "  Entrando...";
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(Input.Email))
        {
            errors = true;
            errorList = ["E-mail é obrigatório"];
            loading = false;
            textoBotao = "Entrar";
            return;
        }

        if (string.IsNullOrWhiteSpace(Input.Password))
    {
            errors = true;
            errorList = ["Senha é obrigatório"];
            loading = false;
            textoBotao = "Entrar";
            return;
        }

        var result = await Acct.LoginAsync(Input.Email, Input.Password);

        if (result.Succeeded)
        {
            success = true;
            Input.Email = Input.Password = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
        loading = false;
        textoBotao = "Entrar";
    }

    private sealed class InputModel
    {
        public string Email { get; set; } = "";

        public string Password { get; set; } = "";
    }
}
