@page "/system/relacionamento/{TableId:int}"
@inject ISnackbar _snackBar
@using modulum.Application.Requests.Dynamic;
@using modulum.Application.Requests.Dynamic.Create;
@using modulum.Shared.Enum;

<MudContainer Class="my-4 px-4">
    @if (_loadingDados)
    {
        <MudAlert Severity="Severity.Warning" Dense="false" Class="p-3">Carregando...</MudAlert>
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
    }
    else
    {
        <MudText Typo="Typo.h4" Style="font-weight: bold" Class="ml-4">
            <MudIcon Icon="@Icons.Material.Filled.Insights" Class="mr-1 mb-n1" Size="Size.Large" />
            @_mapTelaOrigem.NomeTela
        </MudText>

        <MudAlert Class="mt-4" Severity="Severity.Normal" NoIcon="true" Variant="Variant.Text" Elevation="0">
            <MudStack Row="true" Justify="Justify.FlexStart">
                <MudText>Configure os relacionamentos desta tela antes de salvar:</MudText>
            </MudStack>
        </MudAlert>


        <MudPaper Class="mt-4 p-4" Elevation="0" Outlined="true">
            <EditForm Model="@_novoRelacionamento" OnValidSubmit="@AdicionarRelacionamento">
                <MudGrid Gutter="Size.Medium">


                    <MudItem xs="12" sm="12" md="12">

                        <MudStack Justify="Justify.FlexEnd" AlignItems="AlignItems.End" Row="true">

                            @if (_relacionamentos.Any(x => x.TempId == _novoRelacionamento.TempId))
                            {
                                <MudButton Color="Color.Info" OnClick="@CancelarEdicao" Variant="Variant.Text">
                                    Cancelar
                                </MudButton>
                            }
                            <MudButton Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" OnClick="@AdicionarRelacionamento" Disabled="@(!PodeAdicionar())" Variant="Variant.Filled">
                                @(_relacionamentos.Any(x => x.TempId == _novoRelacionamento.TempId) ? "Editar" : "Adicionar")
                            </MudButton>
                            
                        </MudStack>

                </MudItem>

                <MudItem xs="12" sm="6" md="2">
                    <MudSelect 
                        T="MenuRequest" 
                        Label="Selecione a tela" 
                        @bind-Value="_telaSelecionada" 
                        SelectedValuesChanged="@SetTelaSelecionada"
                        Disabled="@(_novoRelacionamento.Id != 0)">

                        <MudSelectItem T="MenuRequest" Value="@(new MenuRequest { Id = 0, NomeTela = "Selecione um valor" })" Disabled="true">
                            Selecione um valor
                        </MudSelectItem>
                        @foreach (var tela in _telasDisponiveis)
                        {
                            <MudSelectItem T="MenuRequest" Value="@tela">@tela.NomeTela</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12" sm="6" md="2">
                    <MudSelect 
                        T="string" 
                        Label="Relacionamento" 
                        @bind-Value="_tipoRelacionamento" 
                        SelectedValuesChanged="@SetTipoRelacionamento"
                        Disabled="@(_novoRelacionamento.Id != 0)">

                        <MudSelectItem T="string" Value="@("tem_muitos")">Tem muitos</MudSelectItem>
                    </MudSelect>
                </MudItem>

                <MudItem xs="12" sm="6" md="2">
                    <MudTextField @bind-Value="@_mapTelaOrigem.NomeTela"
                    Label="Nome da tela"
                    Variant="Variant.Text"
                    InputType="InputType.Text"
                    Class="mb-3" T="string"
                    Disabled="true" />
                </MudItem>

                <MudItem xs="12" sm="6" md="3">
                    @if (_loadingComboBoxCampo)
                    {
                        <MudSkeleton />
                        <MudSkeleton />
                    }
                    else
                    {
                        <MudSelect 
                            T="CreateDynamicFieldRequest" 
                            Label="Selecione um Campo" 
                            @bind-Value="_campoSelecionado" 
                            SelectedValuesChanged="@SetCampoSelecionada">

                            <MudSelectItem T="CreateDynamicFieldRequest" Value="@(new CreateDynamicFieldRequest { Id = 0, NomeCampoTela = "Selecione um valor" })" Disabled="true">
                                Selecione um valor
                            </MudSelectItem>
                            @foreach (var campo in _campos)
                            {
                                <MudSelectItem T="CreateDynamicFieldRequest" Value="@campo">@campo.NomeCampoTela</MudSelectItem>
                            }
                        </MudSelect>
                    }
                </MudItem>

                <MudItem xs="12" sm="6" md="3">
                    <MudCheckBox 
                        T="bool" 
                        Label="Vinculo obrigatório" 
                        Class="mb-3" 
                        @bind-Value="_novoRelacionamento.IsObrigatorio"
                        Disabled="@(_novoRelacionamento.Id != 0)"/>
                </MudItem>

                </MudGrid>
            </EditForm>

            <MudStack Class="pa-4">
                <MudText Typo="Typo.h6">Relacionamentos:</MudText>

                <MudList Class="mt-2" T="string">
                    @foreach (var relacionamento in _relacionamentos)
                    {
                        <MudListItem>
                            <MudGrid Justify="Justify.SpaceBetween">
                                <MudItem xs="8">
                                    <MudText>Um '@relacionamento.NomeTelaOrigem' @(relacionamento.Tipo == TypeRelationshipEnum.OneToMany ? "Tem muitos" : "Tem um") '@relacionamento.NomeTelaDestino'</MudText>
                                </MudItem>
                                <MudItem xs="2" Class="justify-content-center align-items-center">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                                   Color="Color.Warning"
                                                   Size="Size.Small"
                                                   Disabled="@(relacionamento.Tipo == TypeRelationshipEnum.ManyToOne)"
                                                   OnClick="@(() => EditarRelacionamentoAsync(relacionamento))" />
                                </MudItem>
                                <MudItem xs="2" Class="justify-content-center align-items-center">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                        Color="Color.Error"
                                        Size="Size.Small"
                                        OnClick="@(() => RemoverRelacionamentoAsync(relacionamento))" />
                                </MudItem>
                            </MudGrid>
                        </MudListItem>
                    }
                </MudList>
            </MudStack>

            <MudStack Class="mt-4" Justify="Justify.FlexStart" AlignItems="AlignItems.Start">
                <MudButton StartIcon="@(_loading ? string.Empty : Icons.Material.Filled.SaveAs)"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           Class="mr-3"
                           Disabled="_loading"
                           OnClick="@SalvarRelacionamentos">
                    @if (_loading)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">Salvando...</MudText>
                    }
                    else
                    {
                        <MudText>Salvar</MudText>
                    }
                </MudButton>
            </MudStack>
        </MudPaper>
    }
</MudContainer>